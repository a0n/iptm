// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`builder/fromColumnMap should properly deal with missing values 1`] = `
Object {
  "children": Object {
    "x": Object {
      "s": Array [
        Array [
          1,
        ],
        Array [
          2,
        ],
      ],
    },
    "y": Object {
      "s": Array [
        Array [
          0,
        ],
        Array [
          2,
        ],
      ],
    },
  },
}
`;

exports[`builder/fromColumnMap should properly deal with nested objects 1`] = `
Object {
  "children": Object {
    "data": Object {
      "children": Object {
        "reason": Object {
          "s": Array [
            Array [
              1,
            ],
            Array [
              "because",
            ],
          ],
        },
        "timestamp": Object {
          "s": Array [
            Array [
              0,
            ],
            Array [
              1,
            ],
          ],
        },
      },
    },
    "type": Object {
      "s": Array [
        Array [
          0,
          1,
        ],
        Array [
          "start",
          "stop",
        ],
      ],
    },
  },
}
`;

exports[`builder/fromColumnMap should properly deal with weird javascript crap 1`] = `
Object {
  "children": Object {
    "0": Object {
      "s": Array [
        Array [
          1,
        ],
        Array [
          1,
        ],
      ],
    },
    "1": Object {
      "s": Array [
        Array [
          1,
        ],
        Array [
          0,
        ],
      ],
    },
    "a": Object {
      "s": Array [
        Array [
          0,
        ],
        Array [
          1,
        ],
      ],
    },
    "b": Object {
      "s": Array [
        Array [
          0,
        ],
        Array [
          NaN,
        ],
      ],
    },
    "c": Object {
      "s": Array [
        Array [
          0,
        ],
        Array [
          Infinity,
        ],
      ],
    },
    "d": Object {
      "s": Array [
        Array [
          0,
        ],
        Array [
          -Infinity,
        ],
      ],
    },
    "false": Object {
      "s": Array [
        Array [
          1,
        ],
        Array [
          0,
        ],
      ],
    },
    "null": Object {
      "s": Array [
        Array [
          1,
        ],
        Array [
          1,
        ],
      ],
    },
    "true": Object {
      "s": Array [
        Array [
          1,
        ],
        Array [
          1,
        ],
      ],
    },
    "undefined": Object {
      "s": Array [
        Array [
          1,
        ],
        Array [
          false,
        ],
      ],
    },
    "w": Object {
      "s": Array [
        Array [
          0,
        ],
        Array [
          false,
        ],
      ],
    },
    "x": Object {
      "s": Array [
        Array [
          0,
        ],
        Array [
          undefined,
        ],
      ],
    },
    "y": Object {
      "s": Array [
        Array [
          0,
        ],
        Array [
          null,
        ],
      ],
    },
    "z": Object {
      "s": Array [
        Array [
          0,
        ],
        Array [
          true,
        ],
      ],
    },
  },
}
`;

exports[`builder/fromColumnMap should work for normal time series data 1`] = `
Object {
  "children": Object {
    "x": Object {
      "s": Array [
        Array [
          0,
          1,
        ],
        Array [
          1,
          2,
        ],
      ],
    },
    "y": Object {
      "s": Array [
        Array [
          0,
          1,
        ],
        Array [
          2,
          1,
        ],
      ],
    },
  },
}
`;

exports[`toColumnMap/fromColumnMap should properly deal with missing values 1`] = `
Object {
  "children": Object {
    "x": Object {
      "s": Array [
        Array [
          1,
        ],
        Array [
          2,
        ],
      ],
    },
    "y": Object {
      "s": Array [
        Array [
          0,
        ],
        Array [
          2,
        ],
      ],
    },
  },
}
`;

exports[`toColumnMap/fromColumnMap should properly deal with nested objects 1`] = `
Object {
  "children": Object {
    "data": Object {
      "children": Object {
        "reason": Object {
          "s": Array [
            Array [
              1,
            ],
            Array [
              "because",
            ],
          ],
        },
        "timestamp": Object {
          "s": Array [
            Array [
              0,
            ],
            Array [
              1,
            ],
          ],
        },
      },
    },
    "type": Object {
      "s": Array [
        Array [
          0,
          1,
        ],
        Array [
          "start",
          "stop",
        ],
      ],
    },
  },
}
`;

exports[`toColumnMap/fromColumnMap should properly deal with weird javascript crap 1`] = `
Object {
  "children": Object {
    "0": Object {
      "s": Array [
        Array [
          1,
        ],
        Array [
          1,
        ],
      ],
    },
    "1": Object {
      "s": Array [
        Array [
          1,
        ],
        Array [
          0,
        ],
      ],
    },
    "a": Object {
      "s": Array [
        Array [
          0,
        ],
        Array [
          1,
        ],
      ],
    },
    "b": Object {
      "s": Array [
        Array [
          0,
        ],
        Array [
          NaN,
        ],
      ],
    },
    "c": Object {
      "s": Array [
        Array [
          0,
        ],
        Array [
          Infinity,
        ],
      ],
    },
    "d": Object {
      "s": Array [
        Array [
          0,
        ],
        Array [
          -Infinity,
        ],
      ],
    },
    "false": Object {
      "s": Array [
        Array [
          1,
        ],
        Array [
          0,
        ],
      ],
    },
    "null": Object {
      "s": Array [
        Array [
          1,
        ],
        Array [
          1,
        ],
      ],
    },
    "true": Object {
      "s": Array [
        Array [
          1,
        ],
        Array [
          1,
        ],
      ],
    },
    "undefined": Object {
      "s": Array [
        Array [
          1,
        ],
        Array [
          false,
        ],
      ],
    },
    "w": Object {
      "s": Array [
        Array [
          0,
        ],
        Array [
          false,
        ],
      ],
    },
    "x": Object {
      "s": Array [
        Array [
          0,
        ],
        Array [
          undefined,
        ],
      ],
    },
    "y": Object {
      "s": Array [
        Array [
          0,
        ],
        Array [
          null,
        ],
      ],
    },
    "z": Object {
      "s": Array [
        Array [
          0,
        ],
        Array [
          true,
        ],
      ],
    },
  },
}
`;

exports[`toColumnMap/fromColumnMap should work for normal time series data 1`] = `
Object {
  "children": Object {
    "x": Object {
      "s": Array [
        Array [
          0,
          1,
        ],
        Array [
          1,
          2,
        ],
      ],
    },
    "y": Object {
      "s": Array [
        Array [
          0,
          1,
        ],
        Array [
          2,
          1,
        ],
      ],
    },
  },
}
`;

exports[`toColumnMap/iterable should properly deal with missing values 1`] = `
Object {
  "children": Object {
    "x": Object {
      "s": Array [
        Array [
          1,
        ],
        Array [
          2,
        ],
      ],
    },
    "y": Object {
      "s": Array [
        Array [
          0,
        ],
        Array [
          2,
        ],
      ],
    },
  },
}
`;

exports[`toColumnMap/iterable should properly deal with nested objects 1`] = `
Object {
  "children": Object {
    "data": Object {
      "children": Object {
        "reason": Object {
          "s": Array [
            Array [
              1,
            ],
            Array [
              "because",
            ],
          ],
        },
        "timestamp": Object {
          "s": Array [
            Array [
              0,
            ],
            Array [
              1,
            ],
          ],
        },
      },
    },
    "type": Object {
      "s": Array [
        Array [
          0,
          1,
        ],
        Array [
          "start",
          "stop",
        ],
      ],
    },
  },
}
`;

exports[`toColumnMap/iterable should properly deal with weird javascript crap 1`] = `
Object {
  "children": Object {
    "0": Object {
      "s": Array [
        Array [
          1,
        ],
        Array [
          1,
        ],
      ],
    },
    "1": Object {
      "s": Array [
        Array [
          1,
        ],
        Array [
          0,
        ],
      ],
    },
    "a": Object {
      "s": Array [
        Array [
          0,
        ],
        Array [
          1,
        ],
      ],
    },
    "b": Object {
      "s": Array [
        Array [
          0,
        ],
        Array [
          NaN,
        ],
      ],
    },
    "c": Object {
      "s": Array [
        Array [
          0,
        ],
        Array [
          Infinity,
        ],
      ],
    },
    "d": Object {
      "s": Array [
        Array [
          0,
        ],
        Array [
          -Infinity,
        ],
      ],
    },
    "false": Object {
      "s": Array [
        Array [
          1,
        ],
        Array [
          0,
        ],
      ],
    },
    "null": Object {
      "s": Array [
        Array [
          1,
        ],
        Array [
          1,
        ],
      ],
    },
    "true": Object {
      "s": Array [
        Array [
          1,
        ],
        Array [
          1,
        ],
      ],
    },
    "undefined": Object {
      "s": Array [
        Array [
          1,
        ],
        Array [
          false,
        ],
      ],
    },
    "w": Object {
      "s": Array [
        Array [
          0,
        ],
        Array [
          false,
        ],
      ],
    },
    "x": Object {
      "s": Array [
        Array [
          0,
        ],
        Array [
          undefined,
        ],
      ],
    },
    "y": Object {
      "s": Array [
        Array [
          0,
        ],
        Array [
          null,
        ],
      ],
    },
    "z": Object {
      "s": Array [
        Array [
          0,
        ],
        Array [
          true,
        ],
      ],
    },
  },
}
`;

exports[`toColumnMap/iterable should work for normal time series data 1`] = `
Object {
  "children": Object {
    "x": Object {
      "s": Array [
        Array [
          0,
          1,
        ],
        Array [
          1,
          2,
        ],
      ],
    },
    "y": Object {
      "s": Array [
        Array [
          0,
          1,
        ],
        Array [
          2,
          1,
        ],
      ],
    },
  },
}
`;
